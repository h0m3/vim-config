*vim_config.txt* easily edit your vimrc config file

    __     ___              ____             __ _       ~
    \ \   / (_)_ __ ___    / ___|___  _ __  / _(_) __ _ ~
     \ \ / /| | '_ ` _ \  | |   / _ \| '_ \| |_| |/ _` |~
      \ V / | | | | | | | | |__| (_) | | | |  _| | (_| |~
       \_/  |_|_| |_| |_|  \____\___/|_| |_|_| |_|\__, | ~
                                                  |___/ ~

        Just a easy way to edit your vim config file

==========================================================================
CONTENTS                                                         *VimConfig*

    1. Usage .................... |VimConfigUsage|
    2. Commands ................. |VimConfigCommands|
    3. Autoreload ............... |VimConfigAutoreload|
    4. Customization ............ |VimConfigCustomization|
    5. Mappings ................. |VimConfigMappings|
    6. About .................... |VimConfigAbout|
    7. License .................. |VimConfigLicense|

=========================================================================
Usage                                                      *VimConfigUsage*

This plugin provides some commands to allow you to fast and easily
switch to your vim configuration file.

=========================================================================
Commands                                                *VimConfigCommands*

:Vimrc                                                             *:Vimrc*
    Open your current Vimrc file, it uses `$MYVIMRC` as parameter to
    determine where your vimrc should be located

:Gvimrc                                                           *:Gvimrc*
    Open your current GVimrc file, it used `$MYGVIMRC` as parameter to
    determine where your gvimrc should be located

=========================================================================
Autoreload                                            *VimConfigAutoreload*

This script comes with a `autocmd` that reloads vimrc every time you
save it.

If you or your vim is allergic to autocommands or you want to disable
it for some reason check out |vim_config_autoreload|.

Yes. Im evil, this plugin will add a autocmd to your vim by default.

=========================================================================
Customization                                      *VimConfigCustomization*

This plugin provides the follow settings for you to cutomize. This
settings should be set in your vimrc, using `:let`.

Example: `let g:vim_config_load=0`

-------------------------------------------------------------------------
                                                          *vim_config_load*
Values: 0 or 1.
Default: 1

You can set this option to 0 if this plugin is making you crazy and
you cant handle it anymore.

-------------------------------------------------------------------------
                                                        *vim_config_gvimrc*
Values: 0 or 1.
Default: 1

You can set this option to 0 to disable GVim support.

-------------------------------------------------------------------------
                                                    *vim_config_autoreload*
Values: 0 or 1.
Default: 1

You can set this option to 0 to disable vimrc or gvimrc reloading
when saving.

-------------------------------------------------------------------------
                                                         *vim_config_split*
Values: 0 or 1.
Default: 0

This option will open your vimrc / gvimrc on a split window instead of
a new buffer.

-------------------------------------------------------------------------
                                                        *vim_config_vsplit*
Values: 0 or 1.
Default: 0

This option works similar to |vim_config_split| except the window is split
vertically.

This option do conflict with |vim_config_split| and |vim_config_split| will
take precedence if both options are enabled.

=========================================================================
Mappings                                                *VimConfigMappings*

VimConfig doesnt come with default mappings but you can easily add
them trought vim default mappings.

    `nnoremap <C-y> :Vimrc<cr>`
    `inoremap <C-y> <C-o>:Vimrc<cr>`
    `vnoremap <C-y> <esc>:Vimrc<cr>`

=========================================================================
About                                                      *VimConfigAbout*

This is my first vim plugin so please take it easy :P

My objective is just to avoid putting all vimrc related stuff in
my own vimrc, so you get this plugin hahaha.

You can reach me on my git at https://github.com/h0m3 where this
plugin is also available: https://github.com/h0m3/vim_config

Or maybe you want to send a direct message? Try dr.hoome at gmail.com

Thaks to:
    * NERDTree for inspiration on this help file
        http://github.com/preservim/nerdtree

    * LearnVimScriptTheHardWay for more inspiration on this help file
       https://learnvimscriptthehardway.stevelosh.com

    * The thousands of pages of StackOverflow that i needed to make
        vimscript works the way i want

=========================================================================
License                                                  *VimConfigLicense*

VimConfig is hapily shared under BSD Three Clause License.
See https://opensource.org/licenses/BSD-3-Clause.
